[
 {
 "question": "지난 달 총 재고 중량과 금액을 표시하세요.",
 "answer": "SELECT SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = FORMAT_DATE('%Y-%m', DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH))"
 },
 {
 "question": "지난 달 공장별 재고 중량과 금액을 재고 금액이 큰 순으로 표시하세요.",
 "answer": "SELECT FACTORY_TY AS factory_name, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = FORMAT_DATE('%Y-%m', DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH)) GROUP BY factory_name  ORDER BY total_amount DESC"
 },
 {
 "question": "지난 달 공장 실 구분별 재고 중량과 금액을 재고 금액이 큰 순으로 표시하세요.",
 "answer": "SELECT (CASE WHEN FACTORY_TY IN ('3제강', '특수제강', '1단조', '2단조', 'RFM', '대형압연') THEN '대형생산실' WHEN FACTORY_TY IN ('2제강', '소형압연', '가공', '대형봉강', '소형정정', '산세') THEN '소형생산실' WHEN FACTORY_TY IN ('소경', '대경') THEN '강관생산실' ELSE '기타' END) AS factory_division, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = FORMAT_DATE('%Y-%m', DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH)) GROUP BY factory_division  ORDER BY total_amount DESC"
 },
 {
 "question": "지난 달 수요가별 재고 중량과 금액을 재고 중량이 큰 순으로 표시하세요.",
 "answer": "SELECT CUST_NM AS customer_name, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = FORMAT_DATE('%Y-%m', DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH)) GROUP BY customer_name  ORDER BY total_weight DESC"
 },
 {
 "question": "최근 3개월의 총 재고 중량과 금액을 월별로 표시하세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) >= FORMAT_DATE('%Y-%m', DATE_SUB((SELECT MAX(BASE_YMD) FROM `css_daquv.PRODUCT_WIP_MONTHLY`), INTERVAL 2 MONTH)) GROUP BY year_month  ORDER BY year_month"
 },
 {
 "question": "최근 3개월 공장별 재고 중량과 금액을 월별로 표시하세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS `year_month`, FACTORY_TY AS `factory_name`, SUM(WGT) AS `total_weight`, SUM(AMT) AS `total_amount` FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) >= FORMAT_DATE('%Y-%m', DATE_SUB((SELECT MAX(BASE_YMD) FROM `css_daquv.PRODUCT_WIP_MONTHLY`), INTERVAL 2 MONTH)) GROUP BY 1, 2  ORDER BY 1, 2"
 },
 {
 "question": "최근 3개월 공장의 실별 재고 중량과 금액을 월별로 표시하세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS `year_month`, (CASE WHEN FACTORY_TY IN ('3제강', '특수제강', '1단조', '2단조', 'RFM', '대형압연') THEN '대형생산실' WHEN FACTORY_TY IN ('2제강', '소형압연', '가공', '대형봉강', '소형정정', '산세') THEN '소형생산실' WHEN FACTORY_TY IN ('소경', '대경') THEN '강관생산실' ELSE '기타' END) AS `factory_department`, SUM(WGT) AS `total_weight`, SUM(AMT) AS `total_amount` FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) >= FORMAT_DATE('%Y-%m', DATE_SUB((SELECT MAX(BASE_YMD) FROM `css_daquv.PRODUCT_WIP_MONTHLY`), INTERVAL 2 MONTH)) GROUP BY 1, 2  ORDER BY 1, 2"
 },
 {
 "question": "최근 3개월 제소구분별 재고 중량과 금액을 월별로 표시하세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS `year_month`, ITEM_ACCOUNT AS `item_category`, SUM(WGT) AS `total_weight`, SUM(AMT) AS `total_amount` FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) >= FORMAT_DATE('%Y-%m', DATE_SUB((SELECT MAX(BASE_YMD) FROM `css_daquv.PRODUCT_WIP_MONTHLY`), INTERVAL 2 MONTH)) GROUP BY 1, 2  ORDER BY 1, 2"
 },
 {
 "question": "최근 3개월 주여구분별 재고 중량과 금액을 월별로 표시하세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS `year_month`, ORD_TYPE AS ` ORDER_type`, SUM(WGT) AS `total_weight`, SUM(AMT) AS `total_amount` FROM `css_daquv.t2s.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) >= FORMAT_DATE('%Y-%m', DATE_SUB((SELECT MAX(BASE_YMD) FROM `css_daquv.t2s.PRODUCT_WIP_MONTHLY`), INTERVAL 2 MONTH)) GROUP BY 1, 2  ORDER BY 1, 2"
 },
 {
 "question": "최근 3개월 제소구분별, 대강종별 재고 중량과 금액을 월별로 표시하세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS `year_month`, ITEM_ACCOUNT AS `item_category`, (CASE WHEN SUBSTR(IRN_CODE, 1, 1) = 'S' THEN 'STS' WHEN SUBSTR(IRN_CODE, 1, 1) = 'T' THEN '공구강' WHEN SUBSTR(IRN_CODE, 1, 1) IN ('A', 'B', 'C', 'K', 'M') THEN '탄합강' WHEN SUBSTR(IRN_CODE, 1, 1) = 'V' THEN '특수합금' END) AS `major_steel_type`, SUM(WGT) AS `total_weight`, SUM(AMT) AS `total_amount` FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) >= FORMAT_DATE('%Y-%m', DATE_SUB((SELECT MAX(BASE_YMD) FROM `css_daquv.PRODUCT_WIP_MONTHLY`), INTERVAL 2 MONTH)) GROUP BY 1, 2, 3  ORDER BY 1, 2, 3"
 },
 {
 "question": "최근 3개월 주여구분별, 대강종별 재고 중량과 금액을 월별로 표시하세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, ORD_TYPE AS  ORDER_type, (CASE WHEN SUBSTR(IRN_CODE, 1, 1) = 'S' THEN 'STS' WHEN SUBSTR(IRN_CODE, 1, 1) = 'T' THEN '공구강' WHEN SUBSTR(IRN_CODE, 1, 1) IN ('A', 'B', 'C', 'K', 'M') THEN '탄합강' WHEN SUBSTR(IRN_CODE, 1, 1) = 'V' THEN '특수합금' END) AS major_steel_type, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) >= FORMAT_DATE('%Y-%m', DATE_SUB((SELECT MAX(BASE_YMD) FROM `css_daquv.PRODUCT_WIP_MONTHLY`), INTERVAL 2 MONTH)) GROUP BY 1, 2, 3 ORDER BY 1, 2, 3"
 },
 {
 "question": "24년 9월 기준으로 팀별 제품 재고 중량을 중량이 큰 순으로 나열하세요.",
 "answer": "SELECT TEAM_CUST_TY_NM AS sales_team, SUM(WGT) AS total_weight FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-09' AND TYPE = '제품' GROUP BY 1 ORDER BY `합계_중량` DESC"
 },
 {
 "question": "제품 재고 기준으로 팀별로 구분하여 3개월치에 대한 추이를 보여주세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, TEAM_CUST_TY_NM AS sales_team, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) >= FORMAT_DATE('%Y-%m', DATE_SUB((SELECT MAX(BASE_YMD) FROM `css_daquv.PRODUCT_WIP_MONTHLY`), INTERVAL 2 MONTH)) AND TYPE = '제품' GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
 "question": "제품 재고 기준으로 팀의 부문별로 구분하여 3개월치에 대한 추이를 보여주세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, (CASE WHEN TEAM_CUST_TY_NM IN ('선재내수영업팀', '강관영업팀', '내수영업파트', '수출영업파트', '봉강내수영업팀', '공구강내수영업팀', '특수합금영업팀', 'STS수출영업팀', '공구강수출영업팀', '탄합영업실') THEN '영업부문' WHEN TEAM_CUST_TY_NM IN ('스테인리스강연구그룹', '공구합금강연구그룹', '특수합금연구그룹', '메탈공정연구그룹', '스틸공정연구그룹', '타이타늄연구그룹') THEN '기술연구소' ELSE '기타' END) AS team_division, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) >= FORMAT_DATE('%Y-%m', DATE_SUB((SELECT MAX(BASE_YMD) FROM `css_daquv.PRODUCT_WIP_MONTHLY`), INTERVAL 2 MONTH)) AND TYPE = '제품' GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
 "question": "제품 재고 기준으로 팀의 본부별로 구분하여 3개월치에 대한 추이를 보여주세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, (CASE WHEN TEAM_CUST_TY_NM IN ('선재내수영업팀', '강관영업팀', '내수영업파트', '수출영업파트') THEN '영업1본부' WHEN TEAM_CUST_TY_NM IN ('봉강내수영업팀', '공구강내수영업팀', '특수합금영업팀') THEN '영업2본부' WHEN TEAM_CUST_TY_NM IN ('STS수출영업팀', '공구강수출영업팀') THEN '영업3본부' WHEN TEAM_CUST_TY_NM IN ('탄합영업실') THEN '탄합영업실' WHEN TEAM_CUST_TY_NM IN ('스테인리스강연구그룹', '공구합금강연구그룹', '특수합금연구그룹') THEN '제품연구센터' WHEN TEAM_CUST_TY_NM IN ('메탈공정연구그룹', '스틸공정연구그룹') THEN '공정연구센터' WHEN TEAM_CUST_TY_NM IN ('타이타늄연구그룹', '기능소재연구그룹') THEN '선도기술연구센터' WHEN TEAM_CUST_TY_NM IN ('CS팀') THEN 'CS팀' ELSE '품질생산등' END) AS team_headquarters, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) >= FORMAT_DATE('%Y-%m', DATE_SUB((SELECT MAX(BASE_YMD) FROM `css_daquv.PRODUCT_WIP_MONTHLY`), INTERVAL 2 MONTH)) AND TYPE = '제품' GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
 "question": "제품 재고 기준으로 영업부문에 대해 팀별로 구분하여 3개월치에 대한 추이를 보여주세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, TEAM_CUST_TY_NM AS sales_team, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) >= FORMAT_DATE('%Y-%m', DATE_SUB((SELECT MAX(BASE_YMD) FROM `css_daquv.PRODUCT_WIP_MONTHLY`), INTERVAL 2 MONTH)) AND TYPE = '제품' AND TEAM_CUST_TY_NM IN ('선재내수영업팀', '강관영업팀', '내수영업파트', '수출영업파트', '봉강내수영업팀', '공구강내수영업팀', '특수합금영업팀', 'STS수출영업팀', '공구강수출영업팀', '탄합영업실') GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
 "question": "제품 재고 기준으로 기술연구소에 대해 팀별로 구분하여 3개월치에 대한 추이를 보여주세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, TEAM_CUST_TY_NM AS sales_team, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) >= FORMAT_DATE('%Y-%m', DATE_SUB((SELECT MAX(BASE_YMD) FROM `css_daquv.PRODUCT_WIP_MONTHLY`), INTERVAL 2 MONTH)) AND TYPE = '제품' AND TEAM_CUST_TY_NM IN ('스테인리스강연구그룹', '공구합금강연구그룹', '특수합금연구그룹', '메탈공정연구그룹', '스틸공정연구그룹', '타이타늄연구그룹') GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
 "question": "제품 재고 기준으로 영업부문에 대해 본부별로 구분하여 3개월치에 대한 추이를 보여주세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, (CASE WHEN TEAM_CUST_TY_NM IN ('선재내수영업팀', '강관영업팀', '내수영업파트', '수출영업파트') THEN '영업1본부' WHEN TEAM_CUST_TY_NM IN ('봉강내수영업팀', '공구강내수영업팀', '특수합금영업팀') THEN '영업2본부' WHEN TEAM_CUST_TY_NM IN ('STS수출영업팀', '공구강수출영업팀') THEN '영업3본부' WHEN TEAM_CUST_TY_NM IN ('탄합영업실') THEN '탄합영업실' END) AS team_headquarters, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) >= FORMAT_DATE('%Y-%m', DATE_SUB((SELECT MAX(BASE_YMD) FROM `css_daquv.PRODUCT_WIP_MONTHLY`), INTERVAL 2 MONTH)) AND TYPE = '제품' AND TEAM_CUST_TY_NM IN ('선재내수영업팀', '강관영업팀', '내수영업파트', '수출영업파트', '봉강내수영업팀', '공구강내수영업팀', '특수합금영업팀', 'STS수출영업팀', '공구강수출영업팀', '탄합영업실') GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
 "question": "제품 재고 기준으로 R- ORDER 센터에 대해 센터별로 구분하여 3개월치에 대한 추이를 보여주세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, (CASE WHEN TEAM_CUST_TY_NM IN ('스테인리스강연구그룹', '공구합금강연구그룹', '특수합금연구그룹') THEN '제품연구센터' WHEN TEAM_CUST_TY_NM IN ('메탈공정연구그룹', '스틸공정연구그룹') THEN '공정연구센터' WHEN TEAM_CUST_TY_NM IN ('타이타늄연구그룹', '기능소재연구그룹') THEN '선도기술연구센터' END) AS research_center, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) >= FORMAT_DATE('%Y-%m', DATE_SUB((SELECT MAX(BASE_YMD) FROM `css_daquv.PRODUCT_WIP_MONTHLY`), INTERVAL 2 MONTH)) AND TYPE = '제품' AND R_ ORDER = 'Y' AND TEAM_CUST_TY_NM IN ('스테인리스강연구그룹', '공구합금강연구그룹', '특수합금연구그룹', '메탈공정연구그룹', '스틸공정연구그룹', '타이타늄연구그룹', '기능소재연구그룹') GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
 "question": "2제강 공장에 있는 재공 재고에 대한 월별 추이를 보여주세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FACTORY_TY = '2제강' AND TYPE = '재공' GROUP BY 1 ORDER BY 1"
 },
 {
 "question": "합금철 중에서 특수합금 합금철에 대한 24년 분기별 추이를 보여주세요.",
 "answer": "SELECT FORMAT_DATE('%Y', BASE_YMD) AS 년, (CASE WHEN CAST(FORMAT_DATE('%m', BASE_YMD) AS INT64) = 3 THEN 'Q1' WHEN CAST(FORMAT_DATE('%m', BASE_YMD) AS INT64) = 6 THEN 'Q2' WHEN CAST(FORMAT_DATE('%m', BASE_YMD) AS INT64) = 9 THEN 'Q3' WHEN CAST(FORMAT_DATE('%m', BASE_YMD) AS INT64) = 12 THEN 'Q4' END) AS 분기, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y', BASE_YMD) = '2024' AND CAST(FORMAT_DATE('%m', BASE_YMD) AS INT64) IN (3, 6, 9, 12) AND SUBSTR(IRN_CODE, 1, 1) = 'V' GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
 "question": "소형압연 재공 중에서 STS 선재에 대한 24년 5월 중량, 금액을 알려주세요.",
 "answer": "SELECT SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-05' AND FACTORY_TY = '소형압연' AND TYPE = '재공' AND SHAPE_TY = 'STS선재'"
 },
 {
 "question": "소형압연 재공 중에서 STS 대강종에 대한 24년 5월 중량, 금액을 알려주세요.",
 "answer": "SELECT SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-05' AND FACTORY_TY = '소형압연' AND TYPE = '재공' AND SUBSTR(IRN_CODE, 1, 1) = 'S'"
 },
 {
 "question": "전체 장기재고에 대한 중량과 금액을 월별로 산출하여 보여주세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE LONG_TYPE IN ('장기', '일몰') GROUP BY 1 ORDER BY 1"
 },
 {
 "question": "24년 6월 영업팀별 장기재고의 중량과 금액을 보여주세요.",
 "answer": "SELECT TEAM_CUST_TY_NM AS sales_team, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-06' AND LONG_TYPE IN ('장기', '일몰') GROUP BY 1 ORDER BY 1"
 },
 {
 "question": "24년 6월 영업부문에 대해 영업본부별 장기재고의 중량과 금액을 보여주세요.",
 "answer": "SELECT (CASE WHEN TEAM_CUST_TY_NM IN ('선재내수영업팀', '강관영업팀', '내수영업파트', '수출영업파트') THEN '영업1본부' WHEN TEAM_CUST_TY_NM IN ('봉강내수영업팀', '공구강내수영업팀', '특수합금영업팀') THEN '영업2본부' WHEN TEAM_CUST_TY_NM IN ('STS수출영업팀', '공구강수출영업팀') THEN '영업3본부' WHEN TEAM_CUST_TY_NM IN ('탄합영업실') THEN '탄합영업실' END) AS team_headquarters, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-06' AND LONG_TYPE IN ('장기', '일몰') AND TEAM_CUST_TY_NM IN ('선재내수영업팀', '강관영업팀', '내수영업파트', '수출영업파트', '봉강내수영업팀', '공구강내수영업팀', '특수합금영업팀', 'STS수출영업팀', '공구강수출영업팀', '탄합영업실') GROUP BY 1 ORDER BY 1"
 },
 {
 "question": "재공 중에서 주문재와 여재를 구분하여 전전월과 전월의 중량과 금액을 조회하세요. 월을 컬럼으로 배치하고 전월 대비 당월의 증감을 계산해 표시해 주세요.",
 "answer": "WITH TEMP_INVEN AS ( SELECT ORD_TYPE AS  ORDER_type, SUM(CASE WHEN FORMAT_DATE('%Y-%m', BASE_YMD) = FORMAT_DATE('%Y-%m', DATE_SUB(CURRENT_DATE(), INTERVAL 2 MONTH)) THEN WGT ELSE 0 END) AS 합계_중량_전전월, SUM(CASE WHEN FORMAT_DATE('%Y-%m', BASE_YMD) = FORMAT_DATE('%Y-%m', DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH)) THEN WGT ELSE 0 END) AS 합계_중량_전월, SUM(CASE WHEN FORMAT_DATE('%Y-%m', BASE_YMD) = FORMAT_DATE('%Y-%m', DATE_SUB(CURRENT_DATE(), INTERVAL 2 MONTH)) THEN AMT ELSE 0 END) AS 합계_금액_전전월, SUM(CASE WHEN FORMAT_DATE('%Y-%m', BASE_YMD) = FORMAT_DATE('%Y-%m', DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH)) THEN AMT ELSE 0 END) AS 합계_금액_전월 FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE TYPE = '재공' AND ORD_TYPE IN ('주문재', '여재') GROUP BY 1)SELECT *, (`합계_중량_전월` - `합계_중량_전전월`) AS 중량_전월비, (`합계_금액_전월` - `합계_금액_전전월`) AS 금액_전월비 FROM TEMP_INVEN"
 },
 {
 "question": "R- ORDER를 재공과 제품으로 분류를 한 후 팀별로 24년 7월, 8월의 중량과 금액을 조회하세요. 월을 컬럼으로 표시하고 8월 기준으로 전월비를 계산해 표시하세요. 전월비 감소폭이 큰 순으로 팀을 나열해주세요.",
 "answer": "WITH TEMP_INVEN AS ( SELECT TYPE AS product_wip_type, TEAM_CUST_TY_NM AS sales_team, SUM(CASE WHEN FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-07' THEN WGT ELSE 0 END) AS 합계_중량_2407, SUM(CASE WHEN FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-08' THEN WGT ELSE 0 END) AS 합계_중량_2408, SUM(CASE WHEN FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-07' THEN AMT ELSE 0 END) AS 합계_금액_2407, SUM(CASE WHEN FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-08' THEN AMT ELSE 0 END) AS 합계_금액_2408 FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y', BASE_YMD) = '2024' AND CAST(FORMAT_DATE('%m', BASE_YMD) AS INT64) BETWEEN 7 AND 8 AND R_ ORDER = 'Y' GROUP BY 1, 2)SELECT *, (`합계_중량_2408` - `합계_중량_2407`) AS 중량_전월비, (`합계_금액_2408` - `합계_금액_2407`) AS 금액_전월비 FROM TEMP_INVEN ORDER BY 1, 2"
 },
 {
 "question": "전월 제품 재고 중 가장 중량이 많은 사내강종에 대해 사내강종명과 장기재고 중량은 얼마인지 알려주세요.",
 "answer": "SELECT IRN_NAME AS internal_grade_name, SUM(WGT) AS total_weight, SUM(CASE WHEN LONG_TYPE IN ('장기', '일몰') THEN WGT ELSE 0 END) AS total_long_weight FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = FORMAT_DATE('%Y-%m', DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH)) AND TYPE = '제품' GROUP BY 1 ORDER BY `total_weight` DESC LIMIT 1"
 },
 {
 "question": "가장 최근의 제품 재고량을 팀별로 구분하여 비율로 알려주세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, TEAM_CUST_TY_NM AS sales_team, ROUND(SUM(WGT) / SUM(SUM(WGT)) OVER () * 100, 2) AS weight_ratio FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = FORMAT_DATE('%Y-%m', (SELECT MAX(BASE_YMD) FROM `css_daquv.PRODUCT_WIP_MONTHLY`)) AND TYPE = '제품' GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
 "question": "가장 최근의 재공, 제품 장기재고의 중량과 금액을 표시하고 대강종별로의 비율도 같이 표시해주세요.",
 "answer": "WITH TEMP_INVEN AS ( SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, TYPE AS product_wip_type, (CASE WHEN SUBSTR(IRN_CODE, 1, 1) = 'S' THEN 'STS' WHEN SUBSTR(IRN_CODE, 1, 1) = 'T' THEN '공구강' WHEN SUBSTR(IRN_CODE, 1, 1) IN ('A', 'B', 'C', 'K', 'M') THEN '탄합강' WHEN SUBSTR(IRN_CODE, 1, 1) = 'V' THEN '특수합금' END) AS major_steel_type, SUM(CASE WHEN LONG_TYPE IN ('장기', '일몰') THEN WGT ELSE 0 END) AS total_weight, SUM(CASE WHEN LONG_TYPE IN ('장기', '일몰') THEN AMT ELSE 0 END) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = (SELECT FORMAT_DATE('%Y-%m', MAX(BASE_YMD)) FROM `css_daquv.PRODUCT_WIP_MONTHLY`) GROUP BY 1, 2, 3)SELECT `년월`, `제품재공구분`, SUM(`합계_중량`) OVER (PARTITION BY `제품재공구분`) AS 합계_중량_구분, SUM(`합계_금액`) OVER (PARTITION BY `제품재공구분`) AS 합계_금액_구분, `대강종`, `합계_중량`, `합계_금액`, ROUND(`합계_중량` / IFNULL(SUM(`합계_중량`) OVER (PARTITION BY `제품재공구분`), 0) * 100, 2) AS weight_ratio, ROUND(`합계_금액` / IFNULL(SUM(`합계_금액`) OVER (PARTITION BY `제품재공구분`), 0) * 100, 2) AS amount_ratio FROM TEMP_INVEN ORDER BY 1, `제품재공구분`, `대강종`"
 },
 {
 "question": "재공, 제품 장기재고의 중량과 금액을 표시하고 강종 대분류별로의 비율도 같이 표시해주세요.",
 "answer": "WITH TEMP_INVEN AS ( SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, TYPE AS product_wip_type, (CASE WHEN SUBSTR(IRN_CODE, 1, 1) = 'S' THEN 'S(스테인레스강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'T' THEN 'T(공구강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'V' THEN 'V(특수합금강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'A' THEN 'A(탄소강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'B' THEN 'B(합금강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'C' THEN 'C(소입성보증강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'K' THEN 'K(베어링강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'M' THEN 'M(특수용도강)' END) AS steel_main_class, SUM(CASE WHEN LONG_TYPE IN ('장기', '일몰') THEN WGT ELSE 0 END) AS total_weight, SUM(CASE WHEN LONG_TYPE IN ('장기', '일몰') THEN AMT ELSE 0 END) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = (SELECT FORMAT_DATE('%Y-%m', MAX(BASE_YMD)) FROM `css_daquv.PRODUCT_WIP_MONTHLY`) GROUP BY 1, 2, 3)SELECT `년월`, `제품재공구분`, SUM(`합계_중량`) OVER (PARTITION BY `제품재공구분`) AS 합계_중량_구분, SUM(`합계_금액`) OVER (PARTITION BY `제품재공구분`) AS 합계_금액_구분, `강종대분류`, `합계_중량`, `합계_금액`, ROUND(`합계_중량` / IFNULL(SUM(`합계_중량`) OVER (PARTITION BY `제품재공구분`), 0) * 100, 2) AS weight_ratio, ROUND(`합계_금액` / IFNULL(SUM(`합계_금액`) OVER (PARTITION BY `제품재공구분`), 0) * 100, 2) AS amount_ratio FROM TEMP_INVEN ORDER BY 1, `제품재공구분`, `강종대분류`"
 },
 {
 "question": "재공의 장기재고 중에서 전월 기준 장기재고 중량이 가장 큰 사내강종이 무엇인지 표시해주세요.",
 "answer": "SELECT IRN_NAME AS internal_grade_name, SUM(CASE WHEN LONG_TYPE IN ('장기', '일몰') THEN WGT ELSE 0 END) AS total_long_weight FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = FORMAT_DATE('%Y-%m', DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH)) AND TYPE = '재공' GROUP BY 1 ORDER BY `total_long_weight` DESC LIMIT 1"
 },
 {
 "question": "STS304S5 강종의 월별 재공 추이를 공장별로 표시해주세요. 중량과 금액 모두 표시가 필요하며 단위는 톤, 백만원으로 해주세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, FACTORY_TY AS 공장명, ROUND(SUM(WGT) / 1000, 2) AS total_weight_ton, ROUND(SUM(AMT) / 1000000, 2) AS total_amount_million FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE LOWER(IRN_NAME) = LOWER('STS304S5') AND TYPE = '재공' GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
 "question": "특수합금의 최근 3개월 재공, 제품의 월별 중량, 금액을 보여주세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, TYPE AS product_wip_type, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) >= FORMAT_DATE('%Y-%m', DATE_SUB((SELECT MAX(BASE_YMD) FROM `css_daquv.PRODUCT_WIP_MONTHLY`), INTERVAL 2 MONTH)) AND SUBSTR(IRN_CODE, 1, 1) = 'V' GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
 "question": "장기재고(제품, 재공)을 24년 1월부터 월별로 장기, 일몰을 구분하여 표시해주세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, LONG_TYPE AS long_type, SUM(WGT) AS total_weight FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) >= '2024-01' AND LONG_TYPE IN ('장기', '일몰') GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
 "question": "24년 8월 전체 재공을 대강종과 형상으로 구분하여 중량, 금액을 표시해주세요.",
 "answer": "SELECT (CASE WHEN SUBSTR(IRN_CODE, 1, 1) = 'S' THEN 'STS' WHEN SUBSTR(IRN_CODE, 1, 1) = 'T' THEN '공구강' WHEN SUBSTR(IRN_CODE, 1, 1) IN ('A', 'B', 'C', 'K', 'M') THEN '탄합강' WHEN SUBSTR(IRN_CODE, 1, 1) = 'V' THEN '특수합금' END) AS major_steel_type, SHAPE_TY AS shape_type, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-08' AND TYPE = '재공' GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
 "question": "24년 8월 전체 재공을 강종 대분류와 형상으로 구분하여 중량, 금액을 표시해주세요.",
 "answer": "SELECT (CASE WHEN SUBSTR(IRN_CODE, 1, 1) = 'S' THEN 'S(스테인레스강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'T' THEN 'T(공구강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'V' THEN 'V(특수합금강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'A' THEN 'A(탄소강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'B' THEN 'B(합금강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'C' THEN 'C(소입성보증강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'K' THEN 'K(베어링강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'M' THEN 'M(특수용도강)' END) AS steel_main_class, SHAPE_TY AS shape_type, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-08' AND TYPE = '재공' GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
 "question": "전체 재고중에서 판매처가 강관영업팀인 대상에 대해 전체 중량과 금액을 월별로 표시해주세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE TEAM_CUST_TY_NM = '강관영업팀' GROUP BY 1 ORDER BY 1"
 },
 {
 "question": "최근 3개월의 장기재고 중량 추이를 조회하고, 각 월별로 장기재고 중량이 가장 큰 대강종을 표시해주세요.",
 "answer": "WITH TEMP_INVEN AS ( SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, (CASE WHEN SUBSTR(IRN_CODE, 1, 1) = 'S' THEN 'STS' WHEN SUBSTR(IRN_CODE, 1, 1) = 'T' THEN '공구강' WHEN SUBSTR(IRN_CODE, 1, 1) IN ('A', 'B', 'C', 'K', 'M') THEN '탄합강' WHEN SUBSTR(IRN_CODE, 1, 1) = 'V' THEN '특수합금' END) AS major_steel_type, SUM(WGT) AS total_weight FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) >= FORMAT_DATE('%Y-%m', DATE_SUB((SELECT MAX(BASE_YMD) FROM `css_daquv.PRODUCT_WIP_MONTHLY`), INTERVAL 2 MONTH)) AND LONG_TYPE IN ('장기', '일몰') GROUP BY 1, 2)SELECT DISTINCT `년월`, SUM(`합계_중량`) OVER (PARTITION BY `년월`) AS total_weight, LAST_VALUE(`대강종`) OVER (PARTITION BY `년월`  ORDER BY `합계_중량` ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS 최대_대강종 FROM TEMP_INVEN ORDER BY 1, 2"
 },
 {
 "question": "24년 7,8,9월의 장기재고를 대강종 별로 조회하세요. 월을 컬럼으로 전환한 후 대강종 별로 8월과 9월 기준으로 전월 대비 증감을 계산해 표시해주세요.",
 "answer": "WITH TEMP_INVEN AS ( SELECT (CASE WHEN SUBSTR(IRN_CODE, 1, 1) = 'S' THEN 'STS' WHEN SUBSTR(IRN_CODE, 1, 1) = 'T' THEN '공구강' WHEN SUBSTR(IRN_CODE, 1, 1) IN ('A', 'B', 'C', 'K', 'M') THEN '탄합강' WHEN SUBSTR(IRN_CODE, 1, 1) = 'V' THEN '특수합금' END) AS major_steel_type, SUM(CASE WHEN FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-07' THEN WGT ELSE 0 END) AS 합계_중량_2407, SUM(CASE WHEN FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-08' THEN WGT ELSE 0 END) AS 합계_중량_2408, SUM(CASE WHEN FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-09' THEN WGT ELSE 0 END) AS 합계_중량_2409 FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y', BASE_YMD) = '2024' AND CAST(FORMAT_DATE('%m', BASE_YMD) AS INT64) BETWEEN 7 AND 9 AND LONG_TYPE IN ('장기', '일몰') GROUP BY 1)SELECT *, (`합계_중량_2408` - `합계_중량_2407`) AS 중량_전월비_2408, (`합계_중량_2409` - `합계_중량_2408`) AS 중량_전월비_2409, FROM TEMP_INVEN ORDER BY 1"
 },
 {
 "question": "24년 7,8,9월의 장기재고를 대강종 별로 조회하세요. 월을 컬럼으로 전환해 대강종 별로 8월과 9월 기준으로 전월 대비 증감을 계산하세요. 8월과 9월 각각에 대해 상승폭이 가장 큰 대강종을 표시해주세요.",
 "answer": "WITH TEMP_INVEN AS ( SELECT (CASE WHEN SUBSTR(IRN_CODE, 1, 1) = 'S' THEN 'STS' WHEN SUBSTR(IRN_CODE, 1, 1) = 'T' THEN '공구강' WHEN SUBSTR(IRN_CODE, 1, 1) IN ('A', 'B', 'C', 'K', 'M') THEN '탄합강' WHEN SUBSTR(IRN_CODE, 1, 1) = 'V' THEN '특수합금' END) AS major_steel_type, SUM(CASE WHEN FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-07' THEN WGT ELSE 0 END) AS 합계_중량_2407, SUM(CASE WHEN FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-08' THEN WGT ELSE 0 END) AS 합계_중량_2408, SUM(CASE WHEN FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-09' THEN WGT ELSE 0 END) AS 합계_중량_2409 FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y', BASE_YMD) = '2024' AND CAST(FORMAT_DATE('%m', BASE_YMD) AS INT64) BETWEEN 7 AND 9 AND LONG_TYPE IN ('장기', '일몰') GROUP BY 1)SELECT '2024-08' AS YM, `대강종`, `중량_전월비` FROM ( SELECT *, (`합계_중량_2408` - `합계_중량_2407`) AS 중량_전월비, RANK() OVER ( ORDER BY (`합계_중량_2408` - `합계_중량_2407`) DESC) AS 중량_전월비_순위 FROM TEMP_INVEN) T WHERE `중량_전월비_순위`=1UNION ALLSELECT '2024-09' AS YM, `대강종`, `중량_전월비` FROM ( SELECT *, (`합계_중량_2409` - `합계_중량_2408`) AS 중량_전월비, RANK() OVER ( ORDER BY (`합계_중량_2409` - `합계_중량_2408`) DESC) AS 중량_전월비_순위 FROM TEMP_INVEN) T WHERE `중량_전월비_순위`=1"
 },
 {
 "question": "2제강 공장의 24년 8월 재공에 대해서 대강종 기준으로 분류하여 중량과 금액을 표시해주세요.",
 "answer": "SELECT (CASE WHEN SUBSTR(IRN_CODE, 1, 1) = 'S' THEN 'STS' WHEN SUBSTR(IRN_CODE, 1, 1) = 'T' THEN '공구강' WHEN SUBSTR(IRN_CODE, 1, 1) IN ('A', 'B', 'C', 'K', 'M') THEN '탄합강' WHEN SUBSTR(IRN_CODE, 1, 1) = 'V' THEN '특수합금' END) AS major_steel_type, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-08' AND FACTORY_TY = '2제강' AND TYPE = '재공' GROUP BY 1 ORDER BY 1"
 },
 {
 "question": "2제강 공장의 24년 8월 재공에 대해서 강종 대분류 기준으로 분류하여 중량과 금액을 표시해주세요.",
 "answer": "SELECT (CASE WHEN SUBSTR(IRN_CODE, 1, 1) = 'S' THEN 'S(스테인레스강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'T' THEN 'T(공구강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'V' THEN 'V(특수합금강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'A' THEN 'A(탄소강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'B' THEN 'B(합금강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'C' THEN 'C(소입성보증강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'K' THEN 'K(베어링강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'M' THEN 'M(특수용도강)' END) AS steel_main_class, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-08' AND FACTORY_TY = '2제강' AND TYPE = '재공' GROUP BY 1 ORDER BY 1"
 },
 {
 "question": "24년 9월 제품 재고 중에서 R- ORDER 가 차지하는 중량과 비율을 표시해주세요.",
 "answer": "SELECT SUM(CASE WHEN R_ ORDER = 'Y' THEN WGT ELSE 0 END) AS R_ ORDER_중량, ROUND(SUM(CASE WHEN R_ ORDER = 'Y' THEN WGT ELSE 0 END) / IFNULL(SUM(WGT),0) * 100, 2) AS R_ ORDER_비율 FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-09' AND TYPE = '제품'"
 },
 {
 "question": "24년 7월 제품 재고에 대해 장기재고가 총 몇 톤인지 표시하고 장기재고에 해당되는 대상들을 체공월수가 작은 순으로 표시해주세요.",
 "answer": "SELECT ROUND(SUM(WGT) OVER () / 1000, 2) AS total_weight_ton, PASS_MONTH AS elapsed_month, BATCH_ID AS batch_id, LOT_NO AS pon_lot, BUNDLE AS bundle, WGT AS weight FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-07' AND TYPE = '제품' AND LONG_TYPE IN ('장기', '일몰') ORDER BY `경과개월`"
 },
 {
 "question": "24년 7월의 재공 재고를 대상으로 공장별 중량을 계산하고 그 중량을 다시 대강종별로 나눠 표시해주세요.",
 "answer": "SELECT FACTORY_TY AS 공장명, (CASE WHEN SUBSTR(IRN_CODE, 1, 1) = 'S' THEN 'STS' WHEN SUBSTR(IRN_CODE, 1, 1) = 'T' THEN '공구강' WHEN SUBSTR(IRN_CODE, 1, 1) IN ('A', 'B', 'C', 'K', 'M') THEN '탄합강' WHEN SUBSTR(IRN_CODE, 1, 1) = 'V' THEN '특수합금' END) AS major_steel_type, SUM(WGT) AS total_weight FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-07' AND TYPE = '재공' GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
 "question": "24년 7월의 재공 재고를 대상으로 공장별 중량을 계산하고 그 중량을 다시 강종 대분류별로 나눠 표시해주세요.",
 "answer": "SELECT FACTORY_TY AS 공장명, (CASE WHEN SUBSTR(IRN_CODE, 1, 1) = 'S' THEN 'S(스테인레스강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'T' THEN 'T(공구강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'V' THEN 'V(특수합금강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'A' THEN 'A(탄소강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'B' THEN 'B(합금강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'C' THEN 'C(소입성보증강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'K' THEN 'K(베어링강)' WHEN SUBSTR(IRN_CODE, 1, 1) = 'M' THEN 'M(특수용도강)' END) AS steel_main_class, SUM(WGT) AS total_weight FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-07' AND TYPE = '재공' GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
 "question": "24년 전체 재고를 제품과 재공 각 카테고리별 월별 추이로 표시해주세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, TYPE AS product_wip_type, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y', BASE_YMD) = '2024' GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
 "question": "가장 최근 월의 제품 재고에 대해 전체 중량을 표시하고 판매팀별로도 표시하되 본부를 구분하여 표시해주세요. 팀은 중량순으로 내림차순해주세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, SUM(SUM(WGT)) OVER () AS total_all_weight, (CASE WHEN TEAM_CUST_TY_NM IN ('선재내수영업팀', '강관영업팀', '내수영업파트', '수출영업파트') THEN '영업1본부' WHEN TEAM_CUST_TY_NM IN ('봉강내수영업팀', '공구강내수영업팀', '특수합금영업팀') THEN '영업2본부' WHEN TEAM_CUST_TY_NM IN ('STS수출영업팀', '공구강수출영업팀') THEN '영업3본부' WHEN TEAM_CUST_TY_NM IN ('탄합영업실') THEN '탄합영업실' WHEN TEAM_CUST_TY_NM IN ('스테인리스강연구그룹', '공구합금강연구그룹', '특수합금연구그룹') THEN '제품연구센터' WHEN TEAM_CUST_TY_NM IN ('메탈공정연구그룹', '스틸공정연구그룹') THEN '공정연구센터' WHEN TEAM_CUST_TY_NM IN ('타이타늄연구그룹', '기능소재연구그룹') THEN '선도기술연구센터' WHEN TEAM_CUST_TY_NM IN ('CS팀') THEN 'CS팀' ELSE '품질생산등' END) AS team_headquarters, TEAM_CUST_TY_NM AS sales_team, SUM(WGT) AS total_weight FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = FORMAT_DATE('%Y-%m', (SELECT MAX(BASE_YMD) FROM `css_daquv.PRODUCT_WIP_MONTHLY`)) AND TYPE = '제품' GROUP BY 1, 3, 4 ORDER BY 1, 3, `합계_중량` DESC"
 },
 {
 "question": "최근 3개월의 특수합금 합금철에 대해 제품/재공으로 분류해 중량과 금액을 보여주세요. 톤과 억원 단위로 표시해주세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, TYPE AS product_wip_type, ROUND(SUM(WGT) / 1000, 2) AS total_weight_ton, ROUND(SUM(AMT) / 100000000, 2) AS total_amount_billion FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) >= FORMAT_DATE('%Y-%m', DATE_SUB((SELECT MAX(BASE_YMD) FROM `css_daquv.PRODUCT_WIP_MONTHLY`), INTERVAL 2 MONTH)) AND SUBSTR(IRN_CODE, 1, 1) = 'V' GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
 "question": "연구소 R- ORDER에 대해서 최근 2개월 중량과 금액을 팀별로 구분하여 보여주세요. 단위는 천톤, 백만원으로 나타내 주세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, TEAM_CUST_TY_NM AS sales_team, ROUND(SUM(WGT) / 1000000, 2) AS total_weight_thousand_ton, ROUND(SUM(AMT) / 1000000, 2) AS total_amount_million FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) >= FORMAT_DATE('%Y-%m', DATE_SUB((SELECT MAX(BASE_YMD) FROM `css_daquv.PRODUCT_WIP_MONTHLY`), INTERVAL 1 MONTH)) AND R_ ORDER = 'Y' GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
 "question": "연구소 R- ORDER에 대해서 최근 2개월 중량과 금액을 R- ORDER 센터별로 구분하여 보여주세요. 단위는 천톤, 백만원으로 나타내 주세요.",
 "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, (CASE WHEN TEAM_CUST_TY_NM IN ('스테인리스강연구그룹', '공구합금강연구그룹', '특수합금연구그룹') THEN '제품연구센터' WHEN TEAM_CUST_TY_NM IN ('메탈공정연구그룹', '스틸공정연구그룹') THEN '공정연구센터' WHEN TEAM_CUST_TY_NM IN ('타이타늄연구그룹', '기능소재연구그룹') THEN '선도기술연구센터' END) AS research_center, ROUND(SUM(WGT) / 1000000, 2) AS total_weight_thousand_ton, ROUND(SUM(AMT) / 1000000, 2) AS total_amount_million FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) >= FORMAT_DATE('%Y-%m', DATE_SUB((SELECT MAX(BASE_YMD) FROM `css_daquv.PRODUCT_WIP_MONTHLY`), INTERVAL 1 MONTH)) AND R_ ORDER = 'Y' GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
 "question": "24년 9월 전체 제품 재고 중에서 대강종 S에 대해 전체 중량과 금액을 천톤, 억원 단위로 나타내고 사내강종별로 중량 기준 내림차순으로 보여주세요.",
 "answer": "SELECT ROUND(SUM(SUM(WGT)) OVER () / 1000000, 2) AS total_weight_thousand_ton, ROUND(SUM(SUM(AMT)) OVER () / 100000000, 2) AS total_amount_billion, IRN_NAME AS internal_grade_name, SUM(WGT) AS total_weight_by_grade FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-09' AND TYPE = '제품' AND SUBSTR(IRN_CODE, 1, 1) = 'S' GROUP BY `internal_grade_name` ORDER BY `total_weight_by_grade` DESC"
 },
 {
 "question": "24년 9월 전체 제품 재고 중에서 STS 대강종에 대해 전체 중량과 금액을 천톤, 억원 단위로 나타내고 사내강종별로 중량 기준 내림차순으로 보여주세요.",
 "answer": "SELECT ROUND(SUM(SUM(WGT)) OVER () / 1000000, 2) AS total_weight_thousand_ton, ROUND(SUM(SUM(AMT)) OVER () / 100000000, 2) AS total_amount_billion, IRN_NAME AS internal_grade_name, SUM(WGT) AS total_weight_by_grade FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE FORMAT_DATE('%Y-%m', BASE_YMD) = '2024-09' AND TYPE = '제품' AND SUBSTR(IRN_CODE, 1, 1) = 'S' GROUP BY `internal_grade_name` ORDER BY `total_weight_by_grade` DESC"
 },
 {
   "question": "24년 1월부터 12월까지 대강종인 특수합금인 재공과 제품을 각각 월별로 전체중량, 금액을 나타내주고 그중에 장기재고의 중량과, 금액도 별도로 표시해줘.",
   "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, TYPE AS type, SUM(WGT) AS total_wgt, SUM(AMT) AS total_amt, SUM(CASE WHEN PASS_MONTH >= 6 THEN WGT ELSE 0 END) AS long_term_wgt, SUM(CASE WHEN PASS_MONTH >= 6 THEN AMT ELSE 0 END) AS long_term_amt FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE BASE_YMD BETWEEN DATE '2024-01-01' AND DATE '2024-12-31' AND SUBSTR(IRN_CODE, 1, 1) = 'V' GROUP BY year_month, TYPE ORDER BY year_month, TYPE"
 },
 {
   "question": "25년 1월 재공 재고 총 중량",
   "answer": "SELECT SUM(WGT) AS total_wip_wgt FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE TYPE = '재공' AND FORMAT_DATE('%Y-%m', BASE_YMD) = '2025-01'"
 },
 {
   "question": "25년 1월 R-order 재공 중에서 수요가명별로 중량과 금액을 표시해줘",
   "answer": "SELECT CUST_NM AS customer_name, SUM(WGT) AS total_wgt, SUM(AMT) AS total_amt FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE TYPE = '재공' AND FORMAT_DATE('%Y-%m', BASE_YMD) = '2025-01' AND R_ORDER = 'Y' GROUP BY CUST_NM ORDER BY total_wgt DESC"
 },
 {
   "question": "25년 1월 재공에서 수요가명이 '메탈제품연구그룹'이면서 R-order에 해당하는 대상만 총 중량과 금액을 알려줘",
   "answer": "SELECT SUM(WGT) AS total_wgt, SUM(AMT) AS total_amt FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE TYPE = '재공' AND FORMAT_DATE('%Y-%m', BASE_YMD) = '2025-01' AND R_ORDER = 'Y' AND CUST_NM = '메탈제품연구그룹'"
 },
 {
   "question": "25년 1월 재공 데이터에서 SAP 형상이 SP인 대상의 총 중량과 금액을 알려줘",
   "answer": "SELECT SUM(WGT) AS total_wgt, SUM(AMT) AS total_amt FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE TYPE = '재공' AND FORMAT_DATE('%Y-%m', BASE_YMD) = '2025-01' AND SHAPE = 'SP'"
 },
 {
   "question": "25년 1월의 재공 중량을 소재성 재공과 제품성 재공으로 나눠 알려줘",
   "answer": "SELECT GBN_NAME AS wip_type, SUM(WGT) AS total_wgt FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE TYPE = '재공' AND FORMAT_DATE('%Y-%m', BASE_YMD) = '2025-01' AND GBN_NAME IN ('소재성 재공', '제품성 재공') GROUP BY GBN_NAME"
 },
 {
   "question": "24년 12월과 25년 3월에 대한 대강종이 특수합금인 제공에 대해서 제품성과 소재성으로 나눠서 중량과 금액을 알려줘. 단, 중량은 톤, 금액은 억원 단위로 보여줘.",
   "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, GBN_NAME AS wip_type, ROUND(SUM(WGT) / 1000, 2) AS total_wgt_ton, ROUND(SUM(AMT) / 100000000, 2) AS total_amt_billion FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE TYPE = '재공' AND FORMAT_DATE('%Y-%m', BASE_YMD) IN ('2024-12', '2025-03') AND SUBSTR(IRN_CODE, 1, 1) = 'V' AND GBN_NAME IN ('제품성 재공', '소재성 재공') GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
   "question": "24년 12월과 25년 3월에 대한 대강종이 특수합금이면서 R-order인 대상에 대해 재공과 제품의 중량을 월별로 각각 알려줘. 중량은 톤, 금액은 억원 단위로 보여줘.",
   "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, TYPE AS stock_type, ROUND(SUM(WGT) / 1000, 3) AS total_wgt_ton, ROUND(SUM(AMT) / 100000000, 2) AS total_amt_billion FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE R_ORDER = 'Y' AND TYPE IN ('재공', '제품') AND FORMAT_DATE('%Y-%m', BASE_YMD) IN ('2024-12', '2025-03') AND SUBSTR(IRN_CODE, 1, 1) = 'V' GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
   "question": "24년 12월, 25년 2월, 25년 3월에 대한 재공품의 중량과 금액을 대강종별로 각각 보여줘. 단, 중량은 천톤, 금액은 억원.",
   "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS month, CASE WHEN SUBSTR(IRN_CODE, 1, 1) = 'S' THEN 'STS' WHEN SUBSTR(IRN_CODE, 1, 1) = 'T' THEN '공구강' WHEN SUBSTR(IRN_CODE, 1, 1) IN ('A', 'B', 'C', 'K', 'M') THEN '탄합강' WHEN SUBSTR(IRN_CODE, 1, 1) = 'V' THEN '특수합금' ELSE '기타' END AS steel_type, ROUND(SUM(WGT) / 1000000, 3) AS total_wgt_kton, ROUND(SUM(AMT) / 100000000, 2) AS total_amt_billion FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE TYPE = '재공' AND FORMAT_DATE('%Y-%m', BASE_YMD) IN ('2024-12', '2025-02', '2025-03') GROUP BY 1, 2 ORDER BY 1, 2"
 },
 {
   "question": "24년 12월과 25년 3월에 대한 대강종이 특수합금이면서 R-order인 대상에 대해 재공과 제품의 중량을 월별로 각각 알려줘. 중량은 톤, 금액은 억원 단위로 보여줘.",
   "answer": "SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS year_month, TYPE AS stock_type, ROUND(SUM(WGT) / 1000, 3) AS total_wgt_ton, ROUND(SUM(AMT) / 100000000, 2) AS total_amt_billion FROM `css_daquv.PRODUCT_WIP_MONTHLY` WHERE R_ORDER = 'Y' AND TYPE IN ('재공', '제품') AND FORMAT_DATE('%Y-%m', BASE_YMD) IN ('2024-12', '2025-03') AND SUBSTR(IRN_CODE, 1, 1) = 'V' GROUP BY 1, 2 ORDER BY 1, 2"
 }
]